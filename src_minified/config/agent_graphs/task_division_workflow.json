{
  "name": "TaskDivisionWorkflow",
  "description": "A workflow that evaluates task complexity and either processes directly or divides into subtasks",
  "entry_point": "complexity_router",
  "nodes": [
  {
    "id": "complexity_router",
    "node_type": "task_complexity_router_node",
    "parameters": {
    "complexity_threshold": 0.65,
    "temperature": 0.3,
    "prompt_template_path": "generic/task_complexity_router.txt",
    "node_id": "task_complexity_router_node"
    }
  },
  {
    "id": "direct_processor",
    "node_type": "direct_processor_node",
    "parameters": {
    "temperature": 0.7,
    "max_tokens": 2000,
    "prompt_template_path": "generic/direct_processor.txt",
    "node_id": "direct_processor_node"
    }
  },
  {
    "id": "task_divider",
    "node_type": "task_division_node",
    "parameters": {
    "max_subtasks": 5,
    "min_subtasks": 2, 
    "temperature": 0.7,
    "prompt_template_path": "generic/task_division.txt",
    "node_id": "task_divider_node"
    }
  },
  {
    "id": "task_complexity_evaluator",
    "node_type": "task_complexity_evaluator_node",
    "parameters": {
    "temperature": 0.3,
    "prompt_template_path": "generic/task_complexity_evaluation.txt",
    "node_id": "complexity_evaluator_node"
    }
  },
  {
    "id": "process_complex_subtask",
    "node_type": "thought_generator_node",
    "parameters": {
    "num_thoughts": 3,
    "max_tokens_per_thought": 200,
    "temperature": 0.7,
    "prompt_template_path": "tot/generate_thoughts_v1.txt",
    "node_id": "ToT_Generator_Subtask"
    }
  },
  {
    "id": "state_evaluator",
    "node_type": "state_evaluator_node",
    "parameters": {
    "max_tokens_per_eval": 150,
    "temperature": 0.4,
    "prompt_template_path": "tot/evaluate_state_v1.txt",
    "node_id": "ToT_Evaluator_Subtask"
    }
  },
  {
    "id": "search_strategy",
    "node_type": "search_strategy_node",
    "parameters": {
    "beam_width": 2,
    "score_threshold_to_finish": 0.6,
    "min_score_to_continue": 0.1,
    "node_id": "ToT_Strategy_Subtask"
    }
  },
  {
    "id": "process_initial_subtask",
    "node_type": "generic_llm_node",
    "parameters": {
    "prompt_template_path": "generic/simple_request_responder.txt",
    "output_field_name": "dynamic_data.current_subtask.final_answer",
    "input_keys_for_prompt": [
      "dynamic_data.current_subtask.description"
    ],
    "enable_tool_use": false,
    "model_name": null,
    "temperature": 0.7,
    "max_tokens": 250,
    "node_id": "initial_responder_subtask",
    "max_react_iterations": 3
    }
  },
  {
    "id": "result_evaluator",
    "node_type": "generic_llm_node",
    "parameters": {
    "prompt_template_path": "generic/result_evaluator.txt",
    "output_field_name": "next_action",
    "input_keys_for_prompt": [
      "original_input",
      "dynamic_data.current_subtask.description", 
      "dynamic_data.current_subtask.final_answer",
      "score_threshold"
    ],
    "max_tokens": 60,
    "model_name": null,
    "temperature": 0.1,
    "node_id": "result_evaluator_node",
    "score_threshold": 0.6
    }
  },
  {
    "id": "subtask_processor",
    "node_type": "subtask_processor_node",
    "parameters": {
    "node_id": "subtask_result_processor"
    }
  },
  {
    "id": "synthesis_node",
    "node_type": "synthesis_node",
    "parameters": {
    "temperature": 0.7,
    "max_tokens": 2000,
    "node_id": "final_synthesis"
    }
  }
  ],
  "edges": [
  {
    "type": "conditional",
    "source": "complexity_router",
    "condition_key": "next_action",
    "targets": {
    "process_simple_task": "direct_processor",
    "process_complex_task": "task_divider"
    }
  },
  {
    "type": "standard",
    "source": "direct_processor",
    "target": "__end__"
  },
  {
    "type": "standard",
    "source": "task_divider",
    "target": "task_complexity_evaluator"
  },
  {
    "type": "conditional",
    "source": "task_complexity_evaluator",
    "condition_key": "next_action",
    "targets": {
    "process_complex_subtask": "process_initial_subtask",
    "process_simple_subtask": "process_initial_subtask",
    "task_complexity_evaluator": "task_complexity_evaluator",
    "__end__": "__end__"
    },
    "default_target": "__end__"
  },
  {
    "type": "standard",
    "source": "process_complex_subtask",
    "target": "state_evaluator"
  },
  {
    "type": "standard",
    "source": "state_evaluator", 
    "target": "search_strategy"
  },
  {
    "type": "conditional",
    "source": "search_strategy",
    "condition_key": "next_action",
    "targets": {
    "continue": "process_complex_subtask",
    "finish": "subtask_processor"
    },
    "default_target": "__end__"
  },
  {
    "type": "standard",
    "source": "process_initial_subtask",
    "target": "result_evaluator"
  },
  {
    "type": "conditional",
    "source": "result_evaluator",
    "condition_key": "next_action",
    "targets": {
    "process_complex_subtask": "process_complex_subtask",
    "finish": "subtask_processor"
    },
    "default_target": "__end__"
   },
  {
    "type": "conditional",
    "source": "subtask_processor",
    "condition_key": "next_action",
    "targets": {
    "task_complexity_evaluator": "task_complexity_evaluator",
    "__end__": "synthesis_node"
    },
    "default_target": "synthesis_node"
  },
  {
    "type": "standard",
    "source": "synthesis_node",
    "target": "__end__"
  }
  ],
  "config": {
  "recursion_limit": 20,
  "max_search_depth": 5
  }
}